"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CarePlanActivity = /** @class */ (function () {
    function CarePlanActivity(options) {
        this.groupIdentifier = this.getGroupIdentifierType(options.groupIdentifier);
        this.title = options.title;
        this.text = options.text;
        this.tintColor = options.tintColor;
        this.instructions = options.instructions;
        this.schedule = options.schedule;
        this.resultResettable = options.resultResettable;
        this.type = options.type;
        this.optional = options.optional;
        this.events = new Array();
        this.hexColor = options.tintColor ? this.getHexColor(options.tintColor) : "";
    }
    CarePlanActivity.prototype.getJson = function () {
        return {
            groupIdentifier: this.groupIdentifier.toString(),
            title: this.title,
            text: this.text,
            tintColor: this.tintColor,
            instructions: this.instructions,
            schedule: this.schedule,
            resultResettable: this.resultResettable,
            type: this.type,
            optional: this.optional
        };
    };
    CarePlanActivity.prototype.getNumberOfDaysSinceStart = function () {
        if (this.schedule && this.schedule.startDate) {
            var startDate = this.schedule.startDate;
            var oneDay = 24 * 60 * 60 * 1000;
            startDate = new Date(startDate.year, startDate.month - 1, startDate.day);
            return Math.round(Math.abs((startDate.getTime() - new Date().getTime()) / (oneDay)));
        }
        return 0;
    };
    CarePlanActivity.prototype.getGroupIdentifierType = function (groupIdentifier) {
        if (groupIdentifier === "Physical Activity" /* Physical */.toString()) {
            return "Physical Activity" /* Physical */;
        }
        else if (groupIdentifier === "Assessment" /* Assessment */.toString()) {
            return "Assessment" /* Assessment */;
        }
        else if (groupIdentifier === "Medications" /* Medication */.toString()) {
            return "Medications" /* Medication */;
        }
        else {
            return "Other" /* Other */;
        }
    };
    CarePlanActivity.prototype.getHexColor = function (tintColor) {
        var r = Math.round(tintColor.r * 255).toString().slice(0, 2);
        var g = Math.round(tintColor.g * 255).toString().slice(0, 2);
        var b = Math.round(tintColor.b * 255).toString().slice(0, 2);
        var hexColor = "#" + (r + g + b);
        var a = tintColor.a;
        if (a < 1) {
            a = Math.round(a * 255).toString().slice(0, 2);
            hexColor += a;
        }
        return hexColor;
    };
    return CarePlanActivity;
}());
exports.CarePlanActivity = CarePlanActivity;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZS1wbGFuLWFjdGl2aXR5Lm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY2FyZS1wbGFuLWFjdGl2aXR5Lm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBR0E7SUFjSSwwQkFBWSxPQUFZO1FBQ3BCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM1RSxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDM0IsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUNuQyxJQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUM7UUFDekMsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUM7UUFDakQsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQztRQUVqQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksS0FBSyxFQUFpQixDQUFDO1FBQ3pDLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNqRixDQUFDO0lBRUQsa0NBQU8sR0FBUDtRQUNJLE1BQU0sQ0FBQztZQUNILGVBQWUsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLFFBQVEsRUFBRTtZQUNoRCxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7WUFDakIsSUFBSSxFQUFF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UUFBUSxJQUFJLENBQUMsQ0FBQztRQUNsQixDQUFDO1FBRUQsTUFBTSxDQUFDLFFBQVEsQ0FBQztJQUNwQixDQUFDO0lBQ0wsdUJBQUM7QUFBRCxDQUFDLEFBbEZELElBa0ZDO0FBbEZZLDRDQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhcmVQbGFuQWN0aXZpdHlHcm91cCB9IGZyb20gXCIuL2NhcmUtcGxhbi1hY3Rpdml0eS1ncm91cC5lbnVtXCI7XG5pbXBvcnQgeyBDYXJlUGxhbkV2ZW50IH0gZnJvbSBcIi4vY2FyZS1wbGFuLWV2ZW50Lm1vZGVsXCI7XG5cbmV4cG9ydCBjbGFzcyBDYXJlUGxhbkFjdGl2aXR5IHtcbiAgICBncm91cElkZW50aWZpZXI6IENhcmVQbGFuQWN0aXZpdHlHcm91cDtcbiAgICB0aXRsZTogc3RyaW5nO1xuICAgIHRleHQ6IHN0cmluZztcbiAgICB0aW50Q29sb3I6IGFueTtcbiAgICBpbnN0cnVjdGlvbnM6IHN0cmluZztcbiAgICBzY2hlZHVsZTogYW55O1xuICAgIHJlc3VsdFJlc2V0dGFibGU6IGJvb2xlYW47XG4gICAgdHlwZTogbnVtYmVyO1xuICAgIG9wdGlvbmFsOiBib29sZWFuO1xuXG4gICAgaGV4Q29sb3I6IHN0cmluZztcbiAgICBldmVudHM6IEFycmF5PENhcmVQbGFuRXZlbnQ+O1xuXG4gICAgY29uc3RydWN0b3Iob3B0aW9uczogYW55KSB7XG4gICAgICAgIHRoaXMuZ3JvdXBJZGVudGlmaWVyID0gdGhpcy5nZXRHcm91cElkZW50aWZpZXJUeXBlKG9wdGlvbnMuZ3JvdXBJZGVudGlmaWVyKTtcbiAgICAgICAgdGhpcy50aXRsZSA9IG9wdGlvbnMudGl0bGU7XG4gICAgICAgIHRoaXMudGV4dCA9IG9wdGlvbnMudGV4dDtcbiAgICAgICAgdGhpcy50aW50Q29sb3IgPSBvcHRpb25zLnRpbnRDb2xvcjtcbiAgICAgICAgdGhpcy5pbnN0cnVjdGlvbnMgPSBvcHRpb25zLmluc3RydWN0aW9ucztcbiAgICAgICAgdGhpcy5zY2hlZHVsZSA9IG9wdGlvbnMuc2NoZWR1bGU7XG4gICAgICAgIHRoaXMucmVzdWx0UmVzZXR0YWJsZSA9IG9wdGlvbnMucmVzdWx0UmVzZXR0YWJsZTtcbiAgICAgICAgdGhpcy50eXBlID0gb3B0aW9ucy50eXBlO1xuICAgICAgICB0aGlzLm9wdGlvbmFsID0gb3B0aW9ucy5vcHRpb25hbDtcblxuICAgICAgICB0aGlzLmV2ZW50cyA9IG5ldyBBcnJheTxDYXJlUGxhbkV2ZW50PigpO1xuICAgICAgICB0aGlzLmhleENvbG9yID0gb3B0aW9ucy50aW50Q29sb3IgPyB0aGlzLmdldEhleENvbG9yKG9wdGlvbnMudGludENvbG9yKSA6IFwiXCI7XG4gICAgfVxuXG4gICAgZ2V0SnNvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGdyb3VwSWRlbnRpZmllcjogdGhpcy5ncm91cElkZW50aWZpZXIudG9TdHJpbmcoKSxcbiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRpdGxlLFxuICAgICAgICAgICAgdGV4dDogdGhpcy50ZXh0LFxuICAgICAgICAgICAgdGludENvbG9yOiB0aGlzLnRpbnRDb2xvcixcbiAgICAgICAgICAgIGluc3RydWN0aW9uczogdGhpcy5pbnN0cnVjdGlvbnMsXG4gICAgICAgICAgICBzY2hlZHVsZTogdGhpcy5zY2hlZHVsZSxcbiAgICAgICAgICAgIHJlc3VsdFJlc2V0dGFibGU6IHRoaXMucmVzdWx0UmVzZXR0YWJsZSxcbiAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZSxcbiAgICAgICAgICAgIG9wdGlvbmFsOiB0aGlzLm9wdGlvbmFsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZ2V0TnVtYmVyT2ZEYXlzU2luY2VTdGFydCgpOiBudW1iZXIge1xuICAgICAgICBpZiAodGhpcy5zY2hlZHVsZSAmJiB0aGlzLnNjaGVkdWxlLnN0YXJ0RGF0ZSkge1xuICAgICAgICAgICAgbGV0IHN0YXJ0RGF0ZSA9IHRoaXMuc2NoZWR1bGUuc3RhcnREYXRlO1xuICAgICAgICAgICAgY29uc3Qgb25lRGF5ID0gMjQgKiA2MCAqIDYwICogMTAwMDtcbiAgICAgICAgICAgIHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKHN0YXJ0RGF0ZS55ZWFyLCBzdGFydERhdGUubW9udGggLSAxLCBzdGFydERhdGUuZGF5KTtcblxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQoTWF0aC5hYnMoKHN0YXJ0RGF0ZS5nZXRUaW1lKCkgLSBuZXcgRGF0ZSgpLmdldFRpbWUoKSkgLyAob25lRGF5KSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRHcm91cElkZW50aWZpZXJUeXBlKGdyb3VwSWRlbnRpZmllcjogc3RyaW5nKTogQ2FyZVBsYW5BY3Rpdml0eUdyb3VwIHtcbiAgICAgICAgaWYgKGdyb3VwSWRlbnRpZmllciA9PT0gQ2FyZVBsYW5BY3Rpdml0eUdyb3VwLlBoeXNpY2FsLnRvU3RyaW5nKCkpIHtcbiAgICAgICAgICAgIHJldHVybiBDYXJlUGxhbkFjdGl2aXR5R3JvdXAuUGh5c2ljYWw7XG4gICAgICAgIH0gZWxzZSBpZiAoZ3JvdXBJZGVudGlmaWVyID09PSBDYXJlUGxhbkFjdGl2aXR5R3JvdXAuQXNzZXNzbWVudC50b1N0cmluZygpKSB7XG4gICAgICAgICAgICByZXR1cm4gQ2FyZVBsYW5BY3Rpdml0eUdyb3VwLkFzc2Vzc21lbnQ7XG4gICAgICAgIH0gZWxzZSBpZiAoZ3JvdXBJZGVudGlmaWVyID09PSBDYXJlUGxhbkFjdGl2aXR5R3JvdXAuTWVkaWNhdGlvbi50b1N0cmluZygpKSB7XG4gICAgICAgICAgICByZXR1cm4gQ2FyZVBsYW5BY3Rpdml0eUdyb3VwLk1lZGljYXRpb247XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gQ2FyZVBsYW5BY3Rpdml0eUdyb3VwLk90aGVyO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRIZXhDb2xvcih0aW50Q29sb3I6IGFueSk6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IHIgPSBNYXRoLnJvdW5kKHRpbnRDb2xvci5yICogMjU1KS50b1N0cmluZygpLnNsaWNlKDAsIDIpO1xuICAgICAgICBjb25zdCBnID0gTWF0aC5yb3VuZCh0aW50Q29sb3IuZyAqIDI1NSkudG9TdHJpbmcoKS5zbGljZSgwLCAyKTtcbiAgICAgICAgY29uc3QgYiA9IE1hdGgucm91bmQodGludENvbG9yLmIgKiAyNTUpLnRvU3RyaW5nKCkuc2xpY2UoMCwgMik7XG5cbiAgICAgICAgbGV0IGhleENvbG9yID0gYCMke3IgKyBnICsgYn1gO1xuICAgICAgICBsZXQgYSA9IHRpbnRDb2xvci5hO1xuXG4gICAgICAgIGlmIChhIDwgMSkge1xuICAgICAgICAgICAgYSA9IE1hdGgucm91bmQoYSAqIDI1NSkudG9TdHJpbmcoKS5zbGljZSgwLCAyKTtcbiAgICAgICAgICAgIGhleENvbG9yICs9IGE7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaGV4Q29sb3I7XG4gICAgfVxufVxuIl19